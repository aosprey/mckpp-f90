# Makefile for the 3D KPP boundary-layer ocean model
# Written by Nicholas P. Klingaman
# University of Reading, Department of Meteorology and NCAS-Climate
# Substantially revised on 03 Sept. 2009 to remove separate dot files for each target

# Rewritten for f90 code. 
# Currently only forced standalone case. 

# NOTE: You *must* run <make clean> if you wish to recompile the model for another target
# (e.g., if you have compiled for OASIS2 and wish to recompile for OASIS3, you must run <make clean> first,
# then run <make oasis3_coupled>.)

# Makefile for ARCHER - Linux with Cray Fortran compiler
# NOTE: The CFS/GFS targets do not work on HECToR as the CFS/GFS libraries are not installed here.

# Fortran compiler
F90=mpif90

# C Preprocessor
CPP=cpp

# Flags for the Fortran compiler
#F90_FLAGS=-fopenmp -g -fcheck=all -cpp -O3 -fdefault-real-8 -fPIC -mcmodel=medium -I.
F90_FLAGS=-fopenmp -g -fcheck=all -cpp -O3 -fdefault-real-8 -I.
LINK_FLAGS=

# Extra flag required to pass CPP macros through the Fortran compiler - currently required for only XLF.
F90_CPP_FLAG=

# NetCDF 
NCDF_DIR=/home/annette/Software/netcdf
NCDF_LIB=-L$(NCDF_DIR)/lib -lnetcdf -lnetcdff
NCDF_INC=-I$(NCDF_DIR)/include

# MPI (or OpenMPI) include files (not required on ARCHER; compiler locates these automatically)
#MPI_INC=-I/opt/include
# MPI dynamic libraries
#MPI_LIB=-L/opt/lib/openmpi -lmpi_f90 -lmpi_f77

# XIOS parallel I/O library 
XIOS_DIR=/home/annette/Software/xios/xios_trunk_r1964
XIOS_INC=-I$(XIOS_DIR)/inc
XIOS_LIB=-L$(XIOS_DIR)/lib -lxios -lstdc++

# Name of the KPP executable
EXECUTABLE=KPP_ocean

# -- No user modifications beyond this point --

FORCED_FILES = $(wildcard *.F90)
FORCED_OBJS = $(FORCED_FILES:.F90=.o)
FORCED_MODS = PARAMETERS.mod MCKPP_TIMER.mod MCKPP_DATA_TYPES.mod MCKPP_NAMELISTS.mod MCKPP_XIOS_CONTROL.mod MCKPP_XIOS_IO.mod

FORCED_COMPILE = $(F90) $(F90_FLAGS) $(CPP_FLAGS) $(F90_CPP_FLAG)-DARCHER $(OASIS3_MOD_FLAG) $(XIOS_INC) $(NCDF_INC) 
FORCED_LINK = $(F90)  $(F90_FLAGS) $(LINK_FLAGS) $(FORCED_OBJS) -o ${EXECUTABLE} ${XIOS_LIB} ${NCDF_LIB}

.SUFFIXES:
.SUFFIXES: .F90 .o

.F90.o : $(FORCED_MODS)
	$(FORCED_COMPILE) -c $<

PARAMETERS.mod : mc-kpp_parameters.F90
	$(FORCED_COMPILE) -c $<

MCKPP_TIMER.mod : mc-kpp_timer.F90 PARAMETERS.mod
	$(FORCED_COMPILE) -c $<

MCKPP_DATA_TYPES.mod : mc-kpp_data_types.F90 PARAMETERS.mod
	$(FORCED_COMPILE) -c $<

MCKPP_NAMELISTS.mod : mc-kpp_namelists.F90 PARAMETERS.mod
	$(FORCED_COMPILE) -c $<

MCKPP_XIOS_IO.mod : mc-kpp_xios_io.F90 MCKPP_TIMER.mod PARAMETERS.mod MCKPP_DATA_TYPES.mod
	$(FORCED_COMPILE) -c $<

MCKPP_XIOS_CONTROL.mod : mc-kpp_xios_control.F90 MCKPP_TIMER.mod MCKPP_XIOS_IO.mod MCKPP_DATA_TYPES.mod
	$(FORCED_COMPILE) -c $<

forced : CPP_FLAGS=$(F90_CPP_FLAG)-DOPENMP
forced : $(FORCED_MODS) $(FORCED_OBJS)
	$(FORCED_LINK)

clean : 
	rm -rf *.i *.o *.mod $(EXECUTABLE)

obj_clean : 
	rm -rf *.i *.o *.mod

